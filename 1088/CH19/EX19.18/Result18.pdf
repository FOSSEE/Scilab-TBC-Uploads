 ans  =
 
    1.  
 
-->exec('Example18.sci')
 
-->clear
 
-->mode(-1)
Current date is 11-Jun-2013 
 
Welcome to the Textbook Companionship Project 2013 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 
 Book Title                             :       UNIX CONCEPTS AND APPLICATIONS    
 
 Book Edition                         :                                                                           4   
 
 Book Author                          :                                                    Sumitabha Das   
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 
 Code Author                          :                                                     Pranav Bhat T   
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 
 Chapter Number                    :                                                                            19   
 
 Chapter Title                         :                  perl-THE MASTER MANIPULATOR   
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Example 18    :               Show the method of  declaration of subroutines 
 ****************************************************************   
 
 Answer    :      
Warning: obsolete use of '=' instead of '=='.
if getos()='Linux' then
            !       
at line      19 of exec file called by :    
exec('Example18.sci')
 

 
 INSTRUCTIONS   :    

1. Here all instructions are preloaded in the form of a demo

Initially the whole perl script is displaying and then 
 the result of the same can be seen in the command line interpreter.

2. PLEASE MAKE SURE THAT THE PERLSCRIPT INTERPRETER
EXISTS IN THE SYSTEM
OR THE COMMAND WOULD NOT WORK 

3. PRESS ENTER AFTER EACH COMMAND to see its RESULT

5. PRESS ENTER AFTER EACH RESULT TO GO TO THE NEXT COMMAND
.............Press [ENTER] to continue.....	UNIX SHELL SIMULATOR(DEMO VERSION WITH PRELOADED COMMANDS)



# Enter the name of the perlscript file whichever you desire  

  #!/usr/bin/perl 
system("cls")   ;# Script: hither.pl  - Shows the use of Subroutines  
#
 system("cls");             #clears the screen
$username = &take_input("Oracle user-id: ")  ;
$password = &take_input("Oracle password: ", "noecho") ;
print  "\nThe username and password are $username and $password\n" ;
 
sub take_input { 
       my ($prompt,$flag) = @_ ;              # @_stores arguments of subroutines 
       while (1) {                                         # (1) means always true 
                 print("$prompt") ;
	  system(" stty -echo") if (@_==2) ;              #Echo off
                  chop($name=<STDIN>);    
	  system(" stty echo") if (@_==2) ;              #Echo on
                   last if $name =~ /\w/ ;    #Quit if $name has atleast one word character
               }
     $name   ;         #return $name will also do

# type the following command in the command line interpreter as soon as it appears 
       "  hither.pl     "[ENTER]


$  hither.pl               #to execute the perlscript 


   ---------------->Executing PerlScript in Command Line Prompt<-------------- 


$ exit        #To exit the current simulation terminal and return to Scilab console

........# (hit [ENTER] for result)

			BACK TO SCILAB CONSOLE...
Loading initial environment 
-->diary(0)
