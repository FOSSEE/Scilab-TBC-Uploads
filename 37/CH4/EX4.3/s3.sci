//CIRCULAR LINKED LIST
function[link2]=append(ele,link1)
  link2=list(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,,0,0);
  if(link1(1)(1).add==0)
    link1(1)(1).data=ele;
    link1(1)(1).add=1;
    link1(1)(1).nexadd=1;
    link2(1)=link1(1)(1);
    else
    if(link1(1)(1).nexadd==link1(1)(1).add)
      lin2=link1(1)(1);
      lin2.data=ele;
      lin2.add=link1(1)(1).add+1;
      link1(1)(1).nexadd=lin2.add;
      lin2.nexadd=link1(1)(1).add;
      link2(1)=link1(1)(1);
      link2(2)=lin2;
    else
      lin2=link1(1)(1);
      i=1;
      while(link1(i)(1).nexadd~=link1(1)(1).add)
        i=i+1;
      end
      j=i;
      lin2.data=ele;
      lin2.add=link1(i).add+1;
      lin2.nexadd=link1(1)(1).add;
      link1(i).nexadd=lin2.add;
      link2(1)=link1(1)(1);
      i=2;
      while(link1(i).nexadd~=lin2.add)
        link2(i)=(link1(i));
        i=i+1;
      end
      link2(i)=link1(i);
      link2(i+1)=lin2;
    end
  end
endfunction
function[link2]=add(ele,pos,link1);
   link2=list(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,,0,0);
   i=1;
   while(i<=pos)
     if(link1(i).nexadd==link1(1)(1).add)
       break;
     else
       i=i+1;
     end
   end
   if(link1(i).nexadd~=link1(1)(1).add)
     i=i-1;
      lin2.data=ele;
      lin2.add=i;
      j=i;
      while(link1(j).nexadd~=link1(1)(1).add)
        link1(j).add=link1(j).add+1;
        link1(j).nexadd=link1(j).nexadd+1;
        j=j+1;
      end
      link1(j).add=link1(j).add+1;
      lin2.nexadd=link1(i).add;
      link1(i-1).nexadd=lin2.add;
      k=1;
      while(k<i)
         link2(k)=link1(k);
         k=k+1;
       end
       link2(k)=lin2;
       k=k+1;
       link2(k)=link1(k-1);
       k=k+1
       l=k-1;
       while(k~=j)
         link2(k)=link1(l);
         k=k+1;
         l=l+1;
       end
       link2(j)=link1(j-1);;
       link2(j+1)=link1(j);
     else
       if(i==pos)
         k=1;
         lin2.data=ele;
         lin2.add=link1(i-1).add+1;
         link1(i).add=link1(i).add+1;
         lin2.nexadd=link1(i).add;
         link1(i).nexadd=link1(1)(1).add;
         k=1;
         while(k<pos)
           link2(k)=link1(k);
           k=k+1;
         end
         link2(k)=lin2;
         link2(k+1)=link1(k)
       end
     end
     
endfunction
function[link2]=delete1(pos,link1)
  link2=list(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,,0,0);
  i=1;
  j=1;
  while(i<pos)
    if((link1(j).nexadd==link1(1)(1).add))
      j=1;
      i=i+1;
    else
      i=i+1;
      j=j+1;
    end
  end
  if(link1(j).nexadd~=link1(1)(1).add)
    k=1;
    if(j==1)
      k=2;
      while(link1(k).nexadd~=link1(1)(1).add)
        link2(k-1)=link1(k);
        k=k+1;
      end
      link2(k-1)=link1(k);
      link2(k-1).nexadd=link2(1).add;
    else
      lin2=link1(j);
      link1(j-1).nexadd=link1(j+1).add;
      k=1;
      while(link1(k).nexadd~=link1(j+1).add)
        link2(k)=link1(k);
        k=k+1;
      end
      link2(k)=link1(k);
      k=k+2;
      while(link1(k).nexadd~=link1(1)(1).add)
        link2(k-1)=link1(k);
        k=k+1;
      end
      link2(k-1)=link1(k);
    end
  else
    link1(j-1).nexadd=link1(1)(1).add;
    l=1;
    while(link1(l).nexadd~=link1(1)(1).add)
      link2(l)=link1(l);
      l=l+1;
    end
    link2(l)=link1(l);
  end
endfunction
//Calling Routine:
link1=struct('data',0,'add',0,'nexadd',0);
link1=append(4,link1);//This will actualy create a list and 4 as start
link1=append(6,link1);
link1=add(10,2,link1);
link1=delete1(4,link1);//As the list is circular the 4'th element refers to actualy the 1'st one
disp(link1,"After the above manuplations the list is");