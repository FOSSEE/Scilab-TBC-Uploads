clc;
clear;
disp("   ...                  NS        ");
disp("    PS          x=0          x=1  ");
disp("     A          E,0          C,0  ");
disp("     B          C,0          A,0  ");
disp("     C          B,0          G,0  ");
disp("     D          G,0          A,0  ");
disp("     E          F,1          B,0  ");
disp("     F          E,0          D,0  ");
disp("     G          D,0          G,0  ");
disp("Initial partition consists of all the states");
disp("P0=(ABCDEFG)");
disp("Since E only has 1 equivalent different from others,it can be partitioned from others");
disp("P1=(ABCDFG)E");
disp("now check for 2-equivalent i.e. 1-equivalent and their Ii succesors for all possible Ii are also 1 equivalent");
disp("A,F dont satisfy the 2-equivalent so they can be partitioned from others");
disp("P2=(AF)(BCDG)E");
disp("In the similar manner P3 can be obtained by splitting BD and CG since they dont have the same 3 equivalent");
disp("P3=(AF)(BD)(CG)E");
disp("In the same way P4 can be obtained by splitting A and F");
disp("P4=(A)(F)(BD)(CG)E");
disp("P4 cant be splitted more so P5 will be the same and the partition stops");
disp("P5=(A)(F)(BD)(CG)(E)");
disp("so the reduced machine is");
disp("   ...                     NS        ");
disp("   .. PS           x=0          x=1  ");
disp("     A----a        e,0          c,0  ");
disp("     F----f        e,0          b,0  ");
disp("   .(BD)--b        c,0          a,0  ");
disp("    (CG)--c        b,0          c,0  ");
disp("     E----e        f,1          b,0  ");

